// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Repository;

namespace PetShop.Repository.Migrations
{
    [DbContext(typeof(PetShopDbContext))]
    partial class PetShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetShop.Models.Owners", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("owner_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasMaxLength(250);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("date_of_birth")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(100);

                    b.Property<string>("HomePhone")
                        .HasColumnName("home_phone")
                        .HasMaxLength(10);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(100);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnName("mobile_phone")
                        .HasMaxLength(10);

                    b.Property<string>("WorkPhone")
                        .HasColumnName("work_phone")
                        .HasMaxLength(10);

                    b.HasKey("OwnerId");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("PetShop.Models.PetOwners", b =>
                {
                    b.Property<int>("PetId")
                        .HasColumnName("pet_id");

                    b.Property<int>("OwnerId")
                        .HasColumnName("owner_id");

                    b.HasKey("PetId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("pet_owners");
                });

            modelBuilder.Entity("PetShop.Models.PetTypes", b =>
                {
                    b.Property<int>("PetType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pet_type")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(75);

                    b.HasKey("PetType");

                    b.ToTable("pet_types");
                });

            modelBuilder.Entity("PetShop.Models.Pets", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pet_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnName("age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("date_of_birth")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FamilyLasName")
                        .IsRequired()
                        .HasColumnName("family_last_name")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.Property<int>("PetType")
                        .HasColumnName("pet_type");

                    b.Property<string>("Raise")
                        .IsRequired()
                        .HasColumnName("raise")
                        .HasMaxLength(70);

                    b.Property<double>("Size")
                        .HasColumnName("size")
                        .HasMaxLength(70);

                    b.HasKey("PetId");

                    b.HasIndex("PetType");

                    b.ToTable("pets");
                });

            modelBuilder.Entity("PetShop.Models.PetOwners", b =>
                {
                    b.HasOne("PetShop.Models.Owners", "OwnerNavigation")
                        .WithMany("PetOwnersNavigation")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("fk_pet_owner__owners")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetShop.Models.Pets", "PetNavigation")
                        .WithMany("PetOwnersNavigation")
                        .HasForeignKey("PetId")
                        .HasConstraintName("fk_pet_owner__pets")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetShop.Models.Pets", b =>
                {
                    b.HasOne("PetShop.Models.PetTypes", "PetTypeNavigation")
                        .WithMany("PetsNavigation")
                        .HasForeignKey("PetType")
                        .HasConstraintName("fk_pets__pet_type")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
